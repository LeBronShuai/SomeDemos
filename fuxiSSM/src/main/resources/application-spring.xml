<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Application context definition for JPetStore's business layer.
  - Contains bean references to the transaction manager and to the DAOs in
  - dataAccessContext-local/jta.xml (see web.xml's "contextConfigLocation").
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd
			">
    <!-- 加载db配置文件,加载关联数据库的信息 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 开启组件扫描 使用注解 -->
    <context:component-scan base-package="com.baizhi">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 定义数据源,连接数据库 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    <!-- 配置mybaties的sqlSessionBeanFactory -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 给指定包下所有类起别名 -->
        <property name="typeAliasesPackage" value="com.baizhi.entity"/>
        <!-- 加载映射文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:com/baizhi/mapper/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- 加载指定包下的接口,创建代理对象,对象名为接口名首字母小写 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.baizhi.dao"/>
    </bean>
    <!-- 配置事务管理器,注入数据源 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置一个advice(切面) -->
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
        <!-- 配置事务规则 -->
        <tx:attributes>
            <tx:method name="set*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="log" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 编织切面 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.baizhi.service.*.*(..))" id="myPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>
    </aop:config>

</beans>